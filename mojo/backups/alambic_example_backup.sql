
DROP TABLE IF EXISTS conf;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS projects_conf;
DROP TABLE IF EXISTS projects_runs;
DROP TABLE IF EXISTS projects_info;
DROP TABLE IF EXISTS projects_cdata;
DROP TABLE IF EXISTS models_metrics;
DROP TABLE IF EXISTS models_attributes;
DROP TABLE IF EXISTS models_qms;

CREATE TABLE IF NOT EXISTS conf (
    param TEXT NOT NULL, 
    val TEXT,
    PRIMARY KEY( param )
);

CREATE TABLE IF NOT EXISTS users (
    id TEXT NOT NULL, 
    name TEXT,
    email TEXT,
    passwd TEXT,
    roles JSONB,
    projects JSONB,
    notifs JSONB,
    PRIMARY KEY( id )
);

CREATE TABLE IF NOT EXISTS projects_conf (
    id TEXT, 
    name TEXT, 
    description TEXT, 
    is_active BOOLEAN, 
    plugins JSONB,
    PRIMARY KEY( id )
);

CREATE TABLE IF NOT EXISTS models_attributes (
    mnemo TEXT, 
    name TEXT, 
    description JSONB, 
    PRIMARY KEY( mnemo )
);

CREATE TABLE IF NOT EXISTS models_metrics (
    mnemo TEXT, 
    name TEXT, 
    description JSONB, 
    scale JSONB, 
    PRIMARY KEY( mnemo )
);

CREATE TABLE IF NOT EXISTS models_qms (
    mnemo TEXT, 
    name TEXT, 
    model JSONB, 
    PRIMARY KEY( mnemo )
);

CREATE TABLE IF NOT EXISTS projects_runs (
    id BIGSERIAL, 
    project_id TEXT NOT NULL, 
    run_time TIMESTAMP,
    run_delay INT,
    run_user TEXT,
    metrics JSONB,
    indicators JSONB,
    attributes JSONB,
    attributes_conf JSONB,
    recs JSONB,
    PRIMARY KEY( id )
);

CREATE TABLE IF NOT EXISTS projects_cdata (
    id BIGSERIAL, 
    project_id TEXT, 
    plugin_id TEXT,  
    last_run TIMESTAMP,
    cdata JSONB, 
    PRIMARY KEY( id )
);

CREATE TABLE IF NOT EXISTS projects_info (
    project_id TEXT, 
    last_run TIMESTAMP,
    info JSONB, 
    PRIMARY KEY( project_id )
);

INSERT INTO conf (param, val)
 VALUES ('name', 'Default CLI init');
INSERT INTO conf (param, val)
 VALUES ('desc', 'Default CLI Init description');
INSERT INTO users (email, id, name, notifs, passwd, projects, roles)
 VALUES ('alambic@castalia.solutions', 'administrator', 'Administrator', '{}', '{X-PBKDF2}HMACSHA1:AAAD6A:5R2HIw==:3c7E0POr1PCmC7XQdahjgr/PDus=', '{}', '["Admin"]');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The overall Maturity of the project.", "In the context of embedded software, Maturity is usually associated with some kind of reliability (most bugs have been already found) and functionality of code, sustainability of the project (will it still deliver fixes and improvements in a few years), and process predictability. Maturity in the PolarSys context has been further described <a href=\"https://polarsys.org/wiki/MaturityDefinition\">on the wiki</a>, and is actually precisely defined by the decomposition of this quality model."]', 'QM_QUALITY', 'Eclipse Maturity');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The sustainability of the ecosystem evolving around the project.", "Sustainability is a key point for long term support. If there is a lot of activity, if people can get fast and complete answers, if many people from different companies contribute to the project, then it will have more chance to still be there in a few years, and to continue providing fixes and improvements.", "Ecosystem requirements have been discussed on the mailing list and during meetings, and have been further described on the <a href=\"https://polarsys.org/wiki/EclipseQualityRequirements#Identified_Requirements_for_Community\">Polarsys wiki</a>."]', 'QM_ECOSYSTEM', 'Ecosystem');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The maturity of the process used to run the project.", "A sound process helps people to do things right and ease collaborative work. If the process is documented, has predictable output, helps enforcing good development practices, etc. then new comers will easily find the information to collaborate, test or change code, or participate in the community. A good process also helps producing a good product [< href=\"/documentation/references.html#Ing2003\">Ing2003</a>] -- although it is agreed that the process is not enough by itself.", "Process requirements have been discussed on the mailing list and during meetings, and have been further described on the <a href=\"https://polarsys.org/wiki/EclipseQualityRequirements#Identified_Requirements_for_Process\">Polarsys wiki</a>. Some may also recognise CMMi Key Process Areas among the attributes."]', 'QM_PROCESS', 'Process');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The maturity of the product itself, from the code perspective.", "Considering the vast amount and diversity of the projects under the Eclipse umbrella, there must be no single definition of quality to fit them all. However, Eclipse has some recommended practices and concerns about product quality. Projects are then expected to extend this foundation. Major concerns identified for Eclipse products quality are linked to the development context of the foundation (open source, very large code base and thousands of contributor worldwide), and its architecture (modular stacks of components). It must be highlighted that product quality is <a href=\"http://wiki.eclipse.org/Eclipse_Quality\">not clearly defined on the public wiki</a>, neither for its definition nor for how it may be assessed. Furthermore, almost all product-related rules (with a few exceptions, like for packages naming) are optional guidelines. .", "Ecosystem requirements have been discussed on the mailing list and during meetings, and have been further described on the <a href=\"https://wiki.polarsys.org/EclipseQualityRequirements#Identified_Requirements_for_Product\">Polarsys wiki</a>."]', 'QM_PRODUCT', 'Product');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The maturity of code.", "Good code is vital for maintenance and evolution. It will encourage people to contribute, lower the number of bugs, and make a better product for the end-user as well as for the maintainers."]', 'QM_DOC', 'Documentation');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The activity of the project''s ecosystem, as measured on the mailing lists and configuration management system.", "An active project will provide a lot of information on the mailing lists, so when an user encounters an issue she will quickly find the information she needs, and has more chances to get answers if she asks. Fixes and improvements are added regularly."]', 'QM_ACTIVITY', 'Activity');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The diversity of the project''s ecosystem, as measured on the mailing lists and configuration management system.", "If many different actors from different companies are involved in the project, then it improves its sustainability (by eliminating a single point of failure) and adaptability to different situations. Having developers and users with different contexts and perspectives on the project helps widening its scope and provide a more generic support."]', 'QM_DIVERSITY', 'Diversity');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The amount of knowledge provided when someone asks for support.", "Having many answers on a single question helps better understand how the product works in different conditions, and also provides help for people looking for a similar information later on, since mailing lists are archived and public."]', 'QM_SUPPORT', 'Support');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The maturity of the project regarding access and usage of the configuration management system.", "Configuration management is an essential part of the collaboration in the project. Access to the source should be documented and facilitated for new comers to easily come in."]', 'QM_SCM', 'Configuration Management');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["Does the project apply best practices regarding Build and Release management?"]', 'QM_REL_ENG', 'Build and Release Management');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The Maintainability of the codebase, as defined in ISO-9126."]', 'QM_MAINTAINABILITY', 'Maintainability');
INSERT INTO models_attributes (description, mnemo, name)
 VALUES ('["The Reliability of code, as defined in ISO-9126."]', 'QM_RELIABILITY', 'Reliability');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of jobs defined on the Hudson engine."]', 'CI_JOBS', 'Number of jobs', '[]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of jobs that failed during last week on the Hudson engine."]', 'CI_JOBS_FAILED_1W', 'Number of failed jobs one week', '[10, 5, 3, 0]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of red (failed) jobs on the Hudson engine.", "Red jobs in Hudson define failed builds."]', 'CI_JOBS_RED', 'Number of red jobs', '[10, 5, 3, 0]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of green (successful) jobs on the Hudson engine, divided by the total number of jobs.", "Green (or blue) jobs in Hudson define successful builds."]', 'CI_JOBS_GREEN_RATIO', 'Ratio of green jobs', '[25, 50, 75, 95]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of releases recorded in the PMI.", "Milestones are retrieved from the PMI file and are counted whatever their target release is. Milestones are useful to assess the maturity of the release and improves predictability of the project''s output, in terms of quality and time."]', 'PROJECT_REL_VOL', 'Number of releases', '[1, 3, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Is the source_repo info correctly filled in the PMI records? ", "The project management infrastructure file holds information about one or more source repositories. This test checks that at least one source repository is defined, and accessible."]', 'PROJECT_SCM_INFO', 'SCM information', '[0, 1, 1, 2]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Is the bugzilla info correctly filled in the PMI records?", "The project management infrastructure file holds information about one or more bugzilla instances. This test checks that at least one bugzilla instance is defined, with a product identifier, a create_url to enter a new issue, and a query_url to fetch all the issues for the project."]', 'PROJECT_ITS_INFO', 'ITS information', '[2, 3, 4, 5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Is the documentation info correctly filled in the PMI records?", "The project management infrastructure file holds information about various documentation and manuals. This test checks the number of doc-related entries defined in the PMI: build_doc, documentation, documentation_url, forums, gettingstarted_url, mailing_lists, website_url, wiki_url."]', 'PROJECT_DOC_INFO', 'Doc information', '[0, 2, 4, 6]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Is the continuous integration info correctly filled in the PMI records?", "The project management infrastructure file holds information about the location of CI services. This test checks the number of ci-related entries defined in the PMI."]', 'PROJECT_CI_INFO', 'CI information', '[0, 2, 4, 6]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Is the access info (downloads, update sites..) correctly filled in the PMI records?", "The project management infrastructure file holds information about how to access binaries of the project. This test checks the number of access-related entries defined in the PMI: download_url, downloads, update_sites."]', 'PROJECT_ACCESS_INFO', 'Access information', '[0, 1, 2, 3]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of issues opened at the time of analysis on the GitLab project.", "This information is retrieved from GitLab itself, and may differ from numbers gathered from the actual issue tracking system used."]', 'PROJECT_ISSUES_OPEN', 'Open issues', '[]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of forks for this project. More forks usually mean a greater activity."]', 'PROJECT_FORKS', 'Number of forks', '[0, 1, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of times people have starred this project. Users use stars to show their interest for a project, and more stars usually mean a greater visibility and interest."]', 'PROJECT_STARS', 'Number of stars', '[0, 1, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The date of last activity for this project. This includes any type of action: changes on issues, git commits or pushes, merge requests, comments...", "A project with a old last activity timestamp shows the project is dead (or in agony at least)."]', 'PROJECT_LAST_ACTIVITY_AT', 'Last activity', '[]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repository.", "Source code management repositories are those considered as such in the project documentation. Commits in all branches are considered. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). An identity is considered as author if it appears as such in the commit record (for systems logging several identities related to the commit, authoring identity will be considered)."]', 'PROJECT_AUTHORS', 'Project authors', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'PROJECT_AUTHORS_1W', 'Project authors one week', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'PROJECT_AUTHORS_1M', 'Project authors one month', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'PROJECT_AUTHORS_1Y', 'Project authors one year', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Branch test coverage."]', 'SQ_COVERAGE_BRANCH', 'Branch coverage', '[10, 20, 40, 50]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'PROJECT_COMMITTERS_1W', 'Project committers one week', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'PROJECT_COMMITTERS_1M', 'Project committers one month', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'PROJECT_COMMITTERS_1Y', 'Project committers one year', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). "]', 'PROJECT_COMMITS', 'Project Commits', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'PROJECT_COMMITS_1W', 'Project Commits one week', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'PROJECT_COMMITS_1M', 'Project Commits one month', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'PROJECT_COMMITS_1Y', 'Project Commits one year', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. "]', 'SCM_PRS', 'SCM Pull requests', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) in the opened state in source code management repositories."]', 'SCM_PRS_OPENED', 'SCM Open Pull requests', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs)that have been opened within the last week in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_PRS_OPENED_1W', 'SCM Open Pull requests one week', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs)that have been opened within the last month in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_PRS_OPENED_1M', 'SCM Open Pull requests one month', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) that have been opened within the last year in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_PRS_OPENED_1Y', 'SCM Open Pull requests one year', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) that have been opened more than one week ago and are still in the opened state in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_PRS_OPENED_STILL_1W', 'SCM Still Open Pull requests one week', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) that have been opened more than one year ago and are still in the opened state in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_PRS_OPENED_STILL_1Y', 'SCM Still Open Pull requests one year', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) that are in the opened state and have not been updated since one month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_PRS_OPENED_STALED_1M', 'SCM Staled Open Pull requests one month', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) in the closed state in source code management repositories."]', 'SCM_PRS_CLOSED', 'SCM Closed Pull requests', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) in the ''merged'' state in source code management repositories."]', 'SCM_PRS_MERGED', 'SCM Merged Pull requests', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues with a state ''open'' at the time of analysis."]', 'ITS_OPEN', 'ITS Open issues', '[1, 2, 3, 4]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Percentage of open issues compared to the overall number of issues registered in the system."]', 'ITS_OPEN_PERCENT', 'ITS Open issues (%)', '[1, 2, 3, 4]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues registered in the database, whatever their state is."]', 'ITS_ISSUES_ALL', 'ITS Total issues', '[]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues in state open with no assignee (i.e. pending).", "It is considered to be good practice to keep this number low. In an active project, people would either work on the bug (i.e. assign it) or triage it (pass it to some other state or assigning it)."]', 'ITS_OPEN_UNASSIGNED', 'ITS Pending issues', '[500, 100, 50, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of dead issues, i.e. issues that are in state open and have not been updated for a long time (one year).", "It is considered to be good practice to keep this number low because it impacts the confidence in the Issue Tracking System if there are too many open dead issues. Some projects close issues after some time of inactivity and re-open it if needed."]', 'ITS_OPEN_OLD', 'ITS Old open issues', '[1000, 500, 200, 100]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues with a past due date.", "It is considered good practice to keep this number low. Either fix it or maintain its due date."]', 'ITS_LATE', 'ITS Late issues', '[500, 100, 50, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of different authors who created issues during the lifetime of the project.", "A high number of authors shows diversity and improves the bus factor of the project."]', 'ITS_AUTHORS', 'ITS Authors', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of authors who created issues during last week. If today is Wed. 2017-02-01 then the range is from Wed. 2017-01-25 to Wed. 2017-02-01."]', 'ITS_AUTHORS_1W', 'ITS authors last week', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of authors who created issues during last month. If today is 2017-02-01 then the range is from 2017-01-01 to 2017-02-01."]', 'ITS_AUTHORS_1M', 'ITS authors last month', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of authors who created issues during last year. If today is 2017-02-01 then the range is from 2016-02-01 to 2017-02-01."]', 'ITS_AUTHORS_1Y', 'ITS authors last year', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues created during last week. If today is Wed. 2017-02-01 then the range is from Wed. 2017-01-25 to Wed. 2017-02-01."]', 'ITS_CREATED_1W', 'ITS issues created last week', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues created during last month. If today is 2017-02-01 then the range is from 2017-01-01 to 2017-02-01."]', 'ITS_CREATED_1M', 'ITS issues created last month', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues created during last year. If today is 2017-02-01 then the range is from 2016-02-01 to 2017-02-01."]', 'ITS_CREATED_1Y', 'ITS issues created last year', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues updated during last week. If today is Wed. 2017-02-01 then the range is from Wed. 2017-01-25 to Wed. 2017-02-01."]', 'ITS_UPDATED_1W', 'ITS issues updated last week', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues updated during last month. If today is 2017-02-01 then the range is from 2017-01-01 to 2017-02-01."]', 'ITS_UPDATED_1M', 'ITS issues updated last month', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of issues updated during last year. If today is 2017-02-01 then the range is from 2016-02-01 to 2017-02-01."]', 'ITS_UPDATED_1Y', 'ITS issues updated last year', '[2, 4, 9.75, 80]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of different identities found in the User mailing list.", "Having many different authors is a sign of diversity and activity. It makes the support more reliable  (i.e. increased presence of people) and more complete (i.e. more eyes to solve a problem)."]', 'MLS_USR_AUTHORS', 'User ML Authors', '[2, 5, 20, 40]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of different identities found in the User mailing list during last week.", "Having many different authors is a sign of diversity and activity. It makes the support more reliable  (i.e. increased presence of people) and more complete (i.e. more eyes to solve a problem)."]', 'MLS_USR_AUTHORS_1W', 'User ML Authors', '[1, 2, 3, 5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of different identities found in the User mailing list during last year.", "Having many different authors is a sign of diversity and activity. It makes the support more reliable (i.e. increased presence of people) and more complete (i.e. more eyes to solve a problem)."]', 'MLS_USR_AUTHORS_1Y', 'User ML Authors', '[2, 5, 20, 40]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of posts found in the User mailing list.", "Having many posts shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_POSTS', 'User ML Posts', '[5, 50, 100, 500]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of posts found in the User mailing list during last week.", "Having many posts shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_POSTS_1W', 'User ML Posts', '[2, 5, 10, 20]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of posts found in the User mailing list during last month.", "Having many posts shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_POSTS_1M', 'User ML Posts', '[5, 10, 20, 50]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of posts found in the User mailing list during last year.", "Having many posts shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_POSTS_1Y', 'User ML Posts', '[5, 50, 100, 500]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of threads (one question followed by zero or more answers) found in the User mailing list.", "Having many threads shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_THREADS', 'User ML Threads', '[5, 20, 50, 200]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of threads (one question followed by zero or more answers) found in the User mailing list during last week.", "Having many threads shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_THREADS_1W', 'User ML Threads', '[1, 2, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of threads (one question followed by zero or more answers) found in the User mailing list during last month.", "Having many threads shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_THREADS_1M', 'User ML Threads', '[2, 5, 10, 20]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of threads (one question followed by zero or more answers) found in the User mailing list during last year.", "Having many threads shows the mailing list is active. It encourages people to participate, ask and answer questions."]', 'MLS_USR_THREADS_1Y', 'User ML Threads', '[5, 20, 50, 200]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). "]', 'SCM_COMMITS', 'SCM Commits', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_COMMITS_1M', 'SCM Commits one month', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_COMMITS_1Y', 'SCM Commits one year', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of changed lines (added, removed, changed) in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). "]', 'SCM_MOD_LINES', 'SCM Changed Lines', '[1000, 5000, 50000, 500000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of changed lines (added, removed, changed) in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_MOD_LINES_1W', 'SCM Changed Lines one week', '[10, 20, 50, 100]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of changed lines (added, removed, changed) in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_MOD_LINES_1M', 'SCM Changed Lines one month', '[20, 50, 100, 500]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of changed lines (added, removed, changed) in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_MOD_LINES_1Y', 'SCM Changed Lines one year', '[50, 100, 500, 1000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_AUTHORS_1W', 'SCM authors one week', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_AUTHORS_1M', 'SCM authors one month', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_AUTHORS_1Y', 'SCM authors one year', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repository.", "Source code management repositories are those considered as such in the project documentation. Commits in all branches are considered. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). An identity is considered as committer if it appears as such in the commit record."]', 'SCM_COMMITTERS', 'SCM committers', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_COMMITTERS_1W', 'SCM committers one week', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last month.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_COMMITTERS_1M', 'SCM committers one month', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of questions related to the project''s tag posted on Stack Overflow during the last 5 years.", "Having many questions posted about the project indicates a strong interest from the community. The list of questions associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_QUESTIONS_VOL_5Y', 'Stack Overflow Questions (5Y)', '[5, 50, 400, 800]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of answers to questions related to the project''s tag posted on Stack Overflow during the last 5 years.", "Having many answers posted about the project indicates a strong interest from the community, and a good support. The list of questions and their answers associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_ANSWERS_VOL_5Y', 'Stack Overflow Answers (5Y)', '[1, 2, 3, 4]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The average number of answers per questions related to the project''s tag on Stack Overflow during the last 5 years.", "Having many answers posted about the project indicates a strong interest from the community, and a good support. The list of questions and their answers associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_ANSWER_RATE_5Y', 'Stack Overflow Answer rate (5Y)', '[1, 2, 4, 5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of distinct people asking questions related to the project''s tag posted on Stack Overflow during the last 5 years.", "Having many people ask questions about the project indicates a strong interest from the community, and a good support. The list of questions and their answers associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_ASKERS_5Y', 'Stack Overflow Askers (5Y)', '[1, 3, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of votes on questions related to the project''s tag on Stack Overflow during the last 5 years.", "Having many votes on questions about the project indicates a strong interest from the community. The list of questions and their answers associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_VOTES_VOL_5Y', 'Stack Overflow Votes (5Y)', '[10, 100, 250, 500]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of views for questions related to the project''s tag on Stack Overflow during the last 5 years.", "Having many views on questions about the project indicates a strong interest from the community. The list of questions and their answers associated to the tag can be browsed on the <a href=\"https://stackoverflow.com/questions/tagged/java\">Stack Overflow web site</a>."]', 'SO_VIEWS_VOL_5Y', 'Stack Overflow Views (5Y)', '[100, 1000, 2500, 5000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of files analysed."]', 'SQ_FILES', 'Number of files', '[100, 500, 1000, 5000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of functions. Depending on the language, a function is either a function or a method or a paragraph.", "For Java, constructors are considered as methods and accessors are considered as methods if the sonar.squid.analyse.property.accessors property is set to false.", "For Cobol, it is the number of paragraphs."]', 'SQ_FUNCS', 'Number of functions', '[300, 500, 3000, 5000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of lines containing either comment or commented-out code.", "Non-significant comment lines (empty comment lines, comment lines containing only special characters, etc.) do not increase the number of comment lines.", "For Java, file headers are not counted as comment lines (as they usually define the license).", "Lines containing the following instructions are counted both as comments and lines of code: AUTHOR, INSTALLATION, DATE-COMPILED, DATE-WRITTEN, SECURITY.", "For more information on comments for each language, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines\">https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines</a>."]', 'SQ_COMMENT_LINES', 'Number of comment lines', '[500, 1000, 10000, 50000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Density of comment lines = Comment lines / (Lines of code + Comment lines) * 100.", "With such a formula, 50% means that the number of lines of code equals the number of comment lines and 100% means that the file only contains comment lines", "For more information on comments for each language, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines\">https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines</a>."]', 'SQ_COMR', 'Comment lines density', '[10, 20, 30, 40]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["It is the complexity calculated based on the number of paths through the code. Whenever the control flow of a function splits, the complexity counter gets incremented by one. Each function has a minimum complexity of 1. This calculation varies slightly by language because keywords and functionalities do.", "For more information on complexity for each language, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metrics+-+Complexity\">https://docs.sonarqube.org/display/SONAR/Metrics+-+Complexity</a>."]', 'SQ_CPX', 'Total complexity', '[]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Average complexity by file.", "File complexity is computed using the Total complexity (SQ_CPX, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Complexity\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Complexity</a>) divided by the number of files (SQ_FILES)."]', 'SQ_CPX_FILE_IDX', 'File complexity', '[10, 20, 30, 40]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Density of public documented API = (Public API - Public undocumented API) / Public API * 100"]', 'SQ_PUBLIC_API_DOC_DENSITY', 'Public documented API (%)', '[40, 30, 20, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Commented lines of code", "See more information about commented code on <a href=\"https://blog.sonarsource.com/commented-out-code-eradication-with-sonar/\">SonarQube doc web site</a>. There is a well-documented debate on <a href=\"http://softwareengineering.stackexchange.com/questions/190096/can-commented-out-code-be-valuable-documentation\">Stack Overflow</a> as well.", "For more information on comments for each language, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines\">https://docs.sonarqube.org/display/SONAR/Metrics+-+Comment+lines</a>."]', 'SQ_COM_CODE', 'Commented code', '[40, 30, 20, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Density of duplication = Duplicated lines / Lines * 100."]', 'SQ_DUPLICATED_LINES_DENSITY', 'Duplicated lines (%)', '[40, 30, 20, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of public Classes + number of public Functions + number of public Properties"]', 'SQ_PUBLIC_API', 'Public API', '[500, 1000, 5000, 10000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Rating given to your project related to the value of your Technical Debt Ratio. The default Maintainability Rating grid is: A=0-0.05, B=0.06-0.1, C=0.11-0.20, D=0.21-0.5, E=0.51-1.", "The Maintainability Rating scale can be alternately stated by saying that if the outstanding remediation cost depends on the time that has already gone into the application: A &lt;=5% , B between 6 to 10%, C between 11 to 20%, D between 21 to 50%, and anything over 50% is an E.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Maintainability\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Maintainability</a>."]', 'SQ_SQALE_RATING', 'Maintainability rating', '[0.05, 0.1, 0.2, 0.5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The Technical Debt Ratio, as defined in Sqale.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Maintainability\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Maintainability</a>."]', 'SQ_SQALE_DEBT_RATIO', 'Sqale Debt ratio', '[0.05, 0.1, 0.2, 0.5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The Package tangle index, as defined in SonarQube."]', 'SQ_PACKAGES_TANGLE_IDX', 'Package Tangle index', '[0.05, 0.1, 0.2, 0.5]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Effort to fix all maintainability issues. The measure is stored in minutes in the DB.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Maintainability\">https://docs.sonarqube.org/display/SONAR/Metrics+Definitions#MetricDefinitions-Maintainability</a>."]', 'SQ_SQALE_INDEX', 'Technical debt', '[5000, 1000, 500, 100]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Overall test coverage."]', 'SQ_COVERAGE', 'Test coverage', '[10, 20, 40, 50]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Line test coverage."]', 'SQ_COVERAGE_LINE', 'Line coverage', '[10, 20, 40, 50]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of green (successful) jobs on the Hudson engine.", "Green (or blue) jobs in Hudson define successful builds."]', 'CI_JOBS_GREEN', 'Number of green jobs', '[0, 3, 5, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The number of yellow (unstable) jobs on the Hudson engine.", "Yellow jobs in Hudson define unstable builds. According to Hudson''s documentation, a build is unstable if it was built successfully and one or more publishers report it unstable. For example if the JUnit publisher is configured and a test fails then the build will be marked unstable."]', 'CI_JOBS_YELLOW', 'Number of yellow jobs', '[10, 5, 3, 0]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repository.", "Source code management repositories are those considered as such in the project documentation. Commits in all branches are considered. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). An identity is considered as committer if it appears as such in the commit record."]', 'PROJECT_COMMITTERS', 'Project committers', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of Pull Requests (PRs) or Merge Requests (MRs) that have been opened more than one month ago and are still in the opened state in source code management repositories.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one month period starting the day before the data retrieval (example: if retrieval is on Feb 3rd, period is from Jan 3rd to Feb 2nd, both included)."]', 'SCM_PRS_OPENED_STILL_1M', 'SCM Still Open Pull requests one month', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of different identities found in the User mailing list during last month.", "Having many different authors is a sign of diversity and activity. It makes the support more reliable (i.e. increased presence of people) and more complete (i.e. more eyes to solve a problem)."]', 'MLS_USR_AUTHORS_1M', 'User ML Authors', '[1, 3, 5, 8]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of commits in source code management repositories dated during the last week.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). Time range is measured as a one week period starting the day before the data retrieval."]', 'SCM_COMMITS_1W', 'SCM Commits one week', '[2, 5, 13, 121]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as authors of commits in source code management repository.", "Source code management repositories are those considered as such in the project documentation. Commits in all branches are considered. Date used for each commit is ''author date'' (when there is a difference between author date and committer date). An identity is considered as author if it appears as such in the commit record (for systems logging several identities related to the commit, authoring identity will be considered)."]', 'SCM_AUTHORS', 'SCM authors', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Total number of identities found as committers of commits in source code management repositories dated during the last year.", "Source code management repositories are those considered as such in the project documentation. Date used for each commit is ''committer date'' (when there is a difference between author date and committer date). Time range is measured as a one year period starting the day before the data retrieval (example: if retrieval is on Feb 3rd 2016, period is from Feb 3rd 2015 to Feb 3rd 2016, both included)."]', 'SCM_COMMITTERS_1Y', 'SCM committers one year', '[1, 2, 3, 18]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of physical lines that contain at least one character which is neither a whitespace or a tabulation or part of a comment.", "For Cobol, generated lines of code and pre-processing instructions (SKIP1, SKIP2, SKIP3, COPY, EJECT, REPLACE) are not counted as lines of code."]', 'SQ_NCLOC', 'Number of lines of code', '[500, 1000, 10000, 50000]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of issues (violations) found by SonarQube with a severity equal to BLOCKER.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues</a>."]', 'SQ_VIOLATIONS_BLOCKER', 'Number of blocker issues', '[100, 50, 10, 1]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of issues (violations) found by SonarQube with a severity equal to CRITICAL.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues</a>."]', 'SQ_VIOLATIONS_CRITICAL', 'Number of critical issues', '[500, 100, 50, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of issues (violations) found by SonarQube with a severity equal to MAJOR.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues</a>."]', 'SQ_VIOLATIONS_MAJOR', 'Number of major issues', '[500, 100, 50, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of issues (violations) found by SonarQube with a severity equal to MINOR.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues</a>."]', 'SQ_VIOLATIONS_MINOR', 'Number of minor issues', '[500, 100, 50, 10]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["The total number of issues (violations) found by SonarQube with a severity equal to INFO.", "For more information on maintainability metrics as computed by SonarQube, see <a href=\"https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues\">https://docs.sonarqube.org/display/SONAR/Metric+Definitions#MetricDefinitions-Issues</a>."]', 'SQ_VIOLATIONS_INFO', 'Number of info issues', '[5000, 1000, 500, 100]');
INSERT INTO models_metrics (description, mnemo, name, scale)
 VALUES ('["Number of statements.", "For Java, it is the number of statements as defined in the Java Language Specification but without block definitions. Statements counter gets incremented by one each time a following keyword is encountered: <code>if, else, while, do, for, switch, break, continue, return, throw, synchronized, catch, finally.</code>.", "Statements counter is not incremented by a class, method, field, annotation definition, package declaration and import declaration.", "For Cobol, a statement is one of <code>move, if, accept, add, alter, call, cancel, close, compute, continue, delete, display, divide, entry, evaluate, exitProgram, goback, goto, initialize, inspect, merge, multiply, open, perform, read, release, return, rewrite, search, set, sort, start, stop, string, subtract, unstring, write, exec, ibmXmlParse, ibmXmlGenerate, readyReset, mfCommit, mfRollback</code>."]', 'SQ_STATEMENTS', 'Number of statements', '[500, 1000, 10000, 50000]');
INSERT INTO models_qms (mnemo, model, name)
 VALUES ('ALB_BASIC', '[{"type": "attribute", "mnemo": "QM_QUALITY", "active": "true", "children": [{"type": "attribute", "mnemo": "QM_ECOSYSTEM", "active": "true", "children": [{"type": "attribute", "mnemo": "QM_ACTIVITY", "active": "true", "children": [{"type": "metric", "mnemo": "CI_JOBS_FAILED_1W", "active": "true"}, {"type": "metric", "mnemo": "SCM_COMMITS_1M", "active": "true"}, {"type": "metric", "mnemo": "SCM_MOD_LINES_1M", "active": "true"}, {"type": "metric", "mnemo": "ITS_UPDATED_1M", "active": "true"}, {"type": "metric", "mnemo": "MLS_USR_POSTS_1M", "active": "true"}]}, {"type": "attribute", "mnemo": "QM_DIVERSITY", "active": "true", "children": [{"type": "metric", "mnemo": "SCM_AUTHORS_1M", "active": "true"}, {"type": "metric", "mnemo": "ITS_AUTHORS_1M", "active": "true"}, {"type": "metric", "mnemo": "MLS_USR_AUTHORS_1M", "active": "true"}]}, {"type": "attribute", "mnemo": "QM_SUPPORT", "active": "true", "children": [{"type": "metric", "mnemo": "MLS_USR_THREADS_1M", "active": "true"}, {"type": "metric", "mnemo": "MLS_USR_AUTHORS_1M", "active": "true"}, {"type": "metric", "mnemo": "ITS_UPDATED_1M", "active": "true"}]}]}, {"type": "attribute", "mnemo": "QM_PROCESS", "active": "true", "children": [{"type": "attribute", "mnemo": "QM_SCM", "active": "true", "children": [{"type": "metric", "mnemo": "PROJECT_SCM_INFO", "active": "true"}, {"type": "metric", "mnemo": "SCM_COMMITS_1M", "active": "true"}, {"type": "metric", "mnemo": "SCM_AUTHORS_1M", "active": "true"}]}, {"type": "attribute", "mnemo": "QM_DOC", "active": "true", "children": [{"type": "metric", "mnemo": "PROJECT_DOC_INFO", "active": "true"}, {"type": "metric", "mnemo": "PROJECT_SCM_INFO", "active": "true"}, {"type": "metric", "mnemo": "PROJECT_ITS_INFO", "active": "true"}, {"type": "metric", "mnemo": "PROJECT_ACCESS_INFO", "active": "true"}]}, {"type": "attribute", "mnemo": "QM_REL_ENG", "active": "true", "children": [{"type": "metric", "mnemo": "PROJECT_REL_VOL", "active": "true"}, {"type": "metric", "mnemo": "CI_JOBS_GREEN_RATIO", "active": "true"}]}]}, {"type": "attribute", "mnemo": "QM_PRODUCT", "active": "true", "children": [{"type": "attribute", "mnemo": "QM_MAINTAINABILITY", "active": "true", "children": [{"type": "metric", "mnemo": "SQ_DUPLICATED_LINES_DENSITY", "active": "true"}, {"type": "metric", "mnemo": "SQ_SQALE_DEBT_RATIO", "active": "true"}, {"type": "metric", "mnemo": "SQ_COVERAGE", "active": "true"}, {"type": "metric", "mnemo": "SQ_PACKAGES_TANGLE_IDX", "active": "true"}]}, {"type": "attribute", "mnemo": "QM_RELIABILITY", "active": "true", "children": [{"type": "metric", "mnemo": "SQ_CPX_FILE_IDX", "active": "true"}, {"type": "metric", "mnemo": "SQ_COVERAGE", "active": "true"}, {"type": "metric", "mnemo": "SQ_VIOLATIONS_BLOCKER", "active": "true"}, {"type": "metric", "mnemo": "ITS_OPEN", "active": "true"}]}]}]}]', 'Alambic Quality Model');
INSERT INTO projects_conf (description, id, is_active, name, plugins)
 VALUES ('<p>Eclipse Sirius enables the specification of a modeling workbench in terms of <strong>graphical</strong>, <strong>table</strong> or <strong>tree</strong> editors with validation rules and actions using declarative descriptions.</p>
', 'modeling.sirius', '1', 'Eclipse Sirius', '{"Git": {"git_url": "https://git.eclipse.org/r/sirius/org.eclipse.sirius"}, "Jenkins": {"proxy": "", "jenkins_url": "https://ci.eclipse.org/sirius/"}, "Bugzilla": {"proxy": "", "bugzilla_url": "https://bugs.eclipse.org/bugs", "bugzilla_user": "", "bugzilla_passwd": "", "bugzilla_project": "Sirius"}, "EclipsePmi": {"project_pmi": "modeling.sirius"}, "SonarQube45": {"proxy": "", "sonar_url": "https://sonar.eclipse.org", "sonar_project": "org.eclipse.sirius:sirius-parent"}, "EclipseForums": {"proxy": "", "forum_id": "262"}, "StackOverflow": {"so_keyword": "eclipse-sirius"}, "ProjectSummary": {}}');
INSERT INTO projects_info (info, last_run, project_id)
 VALUES ('{"BZ_URL": "https://bugs.eclipse.org/bugs/buglist.cgi?product=Sirius", "SQ_URL": "https://sonar.eclipse.org/dashboard/index?id=org.eclipse.sirius:sirius-parent", "GIT_URL": "https://git.eclipse.org/r/sirius/org.eclipse.sirius", "PROJECT_ID": "modeling.sirius", "MLS_USR_URL": "https://www.eclipse.org/forums/index.php/f/262/", "MLS_USR_DESC": "Sirius communtiy discussions", "MLS_USR_NAME": "Sirius", "PROJECT_DESC": null, "PROJECT_NAME": "Eclipse Sirius", "PROJECT_CI_URL": "https://hudson.eclipse.org/sirius/", "MLS_USR_CAT_URL": "https://api.eclipse.org/forums/category/1", "PROJECT_DOC_URL": "http://www.eclipse.org/sirius/doc", "PROJECT_SCM_URL": "http://git.eclipse.org/c/sirius/org.eclipse.sirius.legacy.git", "PROJECT_MAIN_URL": "http://www.eclipse.org/sirius", "PROJECT_WIKI_URL": "http://wiki.eclipse.org/Sirius", "PMI_UPDATESITE_URL": "http://download.eclipse.org/sirius/updates/releases/1.0.x/luna", "PROJECT_MLS_DEV_URL": "https://dev.eclipse.org/mailman/listinfo/sirius-dev", "PROJECT_MLS_USR_URL": "http://eclipse.org/forums/eclipse.sirius", "PMI_BUGZILLA_PRODUCT": "Sirius", "PROJECT_DOWNLOAD_URL": "http://www.eclipse.org/sirius/download.html", "PMI_BUGZILLA_COMPONENT": "", "PMI_BUGZILLA_QUERY_URL": "https://bugs.eclipse.org/bugs/buglist.cgi?product=Sirius", "PMI_BUGZILLA_CREATE_URL": "https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Sirius", "PROJECT_GETTINGSTARTED_URL": "http://wiki.eclipse.org/Sirius/Getting_Started"}', '2018-10-22 12:51:04', 'modeling.sirius');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('null', 'null', '1', 'null', '{"CI_JOBS": 45, "CI_JOBS_RED": 8, "PMI_REL_VOL": 36, "PMI_ITS_INFO": 5, "PMI_SCM_INFO": 0, "SO_ASKERS_5Y": 18, "CI_JOBS_GREEN": 22, "CI_JOBS_YELLOW": 3, "SO_VIEWS_VOL_5Y": 2846, "SO_VOTES_VOL_5Y": 4, "CI_JOBS_FAILED_1W": 7, "SO_ANSWERS_VOL_5Y": 24, "SO_ANSWER_RATE_5Y": "0.80", "SO_QUESTIONS_VOL_5Y": 30}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "PMI_EMPTY_DEV_ML", "src": "EclipsePmi", "desc": "The developer mailing list URL is empty in the PMI. It helps people know where to ask questions if they want to contribute.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-2.0 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-3.1 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools.gerrit has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job util.shell_tests has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '47', '2017-07-29 08:53:12', 'administrator');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('null', 'null', '2', 'null', '{"CI_JOBS": 45, "CI_JOBS_RED": 8, "PMI_REL_VOL": 36, "PMI_ITS_INFO": 5, "PMI_SCM_INFO": 0, "SO_ASKERS_5Y": 18, "CI_JOBS_GREEN": 22, "CI_JOBS_YELLOW": 3, "SO_VIEWS_VOL_5Y": 2846, "SO_VOTES_VOL_5Y": 4, "CI_JOBS_FAILED_1W": 7, "SO_ANSWERS_VOL_5Y": 24, "SO_ANSWER_RATE_5Y": "0.80", "SO_QUESTIONS_VOL_5Y": 30}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "PMI_EMPTY_DEV_ML", "src": "EclipsePmi", "desc": "The developer mailing list URL is empty in the PMI. It helps people know where to ask questions if they want to contribute.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-2.0 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-3.1 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools.gerrit has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job util.shell_tests has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '44', '2017-07-29 08:54:35', 'administrator');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('null', 'null', '3', 'null', '{"CI_JOBS": 45, "CI_JOBS_RED": 8, "PMI_REL_VOL": 36, "PMI_ITS_INFO": 5, "PMI_SCM_INFO": 0, "SO_ASKERS_5Y": 18, "CI_JOBS_GREEN": 22, "CI_JOBS_YELLOW": 3, "SO_VIEWS_VOL_5Y": 2846, "SO_VOTES_VOL_5Y": 4, "CI_JOBS_FAILED_1W": 7, "SO_ANSWERS_VOL_5Y": 24, "SO_ANSWER_RATE_5Y": "0.80", "SO_QUESTIONS_VOL_5Y": 30}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "PMI_EMPTY_DEV_ML", "src": "EclipsePmi", "desc": "The developer mailing list URL is empty in the PMI. It helps people know where to ask questions if they want to contribute.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-2.0 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools-3.1 has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job ecoretools.gerrit has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job util.shell_tests has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '49', '2017-07-29 09:00:08', 'administrator');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('null', 'null', '4', 'null', '{"CI_JOBS": 41, "CI_JOBS_RED": 4, "SO_ASKERS_5Y": 27, "CI_JOBS_GREEN": 0, "CI_JOBS_YELLOW": 2, "PROJECT_REL_VOL": 51, "SO_VIEWS_VOL_5Y": 5236, "SO_VOTES_VOL_5Y": 9, "PROJECT_DOC_INFO": 8, "PROJECT_ITS_INFO": 5, "PROJECT_SCM_INFO": 1, "CI_JOBS_FAILED_1W": 4, "SO_ANSWERS_VOL_5Y": 37, "SO_ANSWER_RATE_5Y": 1.03, "CI_JOBS_GREEN_RATIO": 0, "PROJECT_ACCESS_INFO": 3, "SO_QUESTIONS_VOL_5Y": 36}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius-canary has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Hudson", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '40', '2018-10-22 12:10:59', 'administrator');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('null', 'null', '5', 'null', '{"SQ_CPX": 84547.0, "CI_JOBS": 41, "SQ_COMR": 22.9, "SQ_FILES": 4685.0, "SQ_FUNCS": 34525.0, "SQ_NCLOC": 446422.0, "SQ_RULES": 35, "SQ_TESTS": 5289.0, "CI_JOBS_RED": 4, "SCM_AUTHORS": 31, "SCM_COMMITS": 4278, "SQ_COVERAGE": 64.5, "SO_ASKERS_5Y": 27, "CI_JOBS_GREEN": 21, "MLS_USR_POSTS": 1826, "SCM_MOD_LINES": 6906451, "SQ_NCLOC_LANG": null, "SQ_PUBLIC_API": 21267.0, "SQ_STATEMENTS": 220605.0, "SQ_VIOLATIONS": 11379.0, "CI_JOBS_YELLOW": 2, "SCM_AUTHORS_1M": 7, "SCM_AUTHORS_1W": 3, "SCM_AUTHORS_1Y": 15, "SCM_COMMITS_1M": 65, "SCM_COMMITS_1W": 3, "SCM_COMMITS_1Y": 533, "SCM_COMMITTERS": 21, "SQ_ISSUES_OPEN": 11379.0, "SQ_SQALE_INDEX": 203406.0, "MLS_USR_AUTHORS": 542, "MLS_USR_THREADS": 1826, "PROJECT_REL_VOL": 51, "SO_VIEWS_VOL_5Y": 5238, "SO_VOTES_VOL_5Y": 9, "SQ_CPX_FILE_IDX": 18.0, "SQ_CPX_FUNC_IDX": 2.4, "SQ_SQALE_RATING": 1.0, "MLS_USR_POSTS_1M": 104, "MLS_USR_POSTS_1W": 24, "MLS_USR_POSTS_1Y": 1038, "PROJECT_DOC_INFO": 8, "PROJECT_ITS_INFO": 5, "PROJECT_SCM_INFO": 1, "SCM_MOD_LINES_1M": 102913, "SCM_MOD_LINES_1W": 459, "SCM_MOD_LINES_1Y": 366376, "SQ_COMMENT_LINES": 132625.0, "SQ_COVERAGE_LINE": 68.1, "SQ_CPX_CLASS_IDX": 15.6, "CI_JOBS_FAILED_1W": 4, "SCM_COMMITTERS_1M": 7, "SCM_COMMITTERS_1W": 3, "SCM_COMMITTERS_1Y": 10, "SO_ANSWERS_VOL_5Y": 37, "SO_ANSWER_RATE_5Y": 1.03, "MLS_USR_AUTHORS_1M": 28, "MLS_USR_AUTHORS_1W": 10, "MLS_USR_AUTHORS_1Y": 147, "MLS_USR_THREADS_1M": 42, "MLS_USR_THREADS_1W": 14, "MLS_USR_THREADS_1Y": 368, "SQ_COVERAGE_BRANCH": 57.7, "SQ_VIOLATIONS_INFO": 161.0, "CI_JOBS_GREEN_RATIO": 77, "PROJECT_ACCESS_INFO": 3, "SO_QUESTIONS_VOL_5Y": 36, "SQ_DUPLICATED_FILES": 801.0, "SQ_DUPLICATED_LINES": 51929.0, "SQ_PUBLIC_UNDOC_API": 4175.0, "SQ_SQALE_DEBT_RATIO": 1.5, "SQ_VIOLATIONS_MAJOR": 9061.0, "SQ_VIOLATIONS_MINOR": 1788.0, "SQ_DUPLICATED_BLOCKS": 3700.0, "SQ_VIOLATIONS_BLOCKER": 0.0, "SQ_VIOLATIONS_CRITICAL": 369.0, "SQ_PUBLIC_API_DOC_DENSITY": 80.4, "SQ_TEST_SUCCESSFUL_DENSITY": 99.8, "SQ_DUPLICATED_LINES_DENSITY": 6.4}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius-canary has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '34', '2018-10-22 12:29:26', 'administrator');
INSERT INTO projects_runs (attributes, attributes_conf, id, indicators, metrics, project_id, recs, run_delay, run_time, run_user)
 VALUES ('{"QM_DOC": "4.8", "QM_SCM": "4.0", "QM_PROCESS": "4.4", "QM_PRODUCT": "4.5", "QM_QUALITY": "4.5", "QM_REL_ENG": "4.5", "QM_SUPPORT": "5.0", "QM_ACTIVITY": "4.2", "QM_DIVERSITY": "4.5", "QM_ECOSYSTEM": "4.6", "QM_RELIABILITY": "4.0", "QM_MAINTAINABILITY": "5.0"}', '{"QM_DOC": "4 / 4", "QM_SCM": "3 / 3", "QM_PROCESS": "9 / 9", "QM_PRODUCT": "6 / 8", "QM_QUALITY": "23 / 28", "QM_REL_ENG": "2 / 2", "QM_SUPPORT": "2 / 3", "QM_ACTIVITY": "4 / 5", "QM_DIVERSITY": "2 / 3", "QM_ECOSYSTEM": "8 / 11", "QM_RELIABILITY": "3 / 4", "QM_MAINTAINABILITY": "3 / 4"}', '6', '{"SQ_COVERAGE": 5, "SCM_AUTHORS_1M": 4, "SCM_COMMITS_1M": 4, "PROJECT_REL_VOL": 5, "SQ_CPX_FILE_IDX": 2, "MLS_USR_POSTS_1M": 5, "PROJECT_DOC_INFO": 5, "PROJECT_ITS_INFO": 5, "PROJECT_SCM_INFO": 4, "SCM_MOD_LINES_1M": 5, "CI_JOBS_FAILED_1W": 3, "MLS_USR_AUTHORS_1M": 5, "MLS_USR_THREADS_1M": 5, "CI_JOBS_GREEN_RATIO": 4, "PROJECT_ACCESS_INFO": 5, "SQ_SQALE_DEBT_RATIO": 5, "SQ_VIOLATIONS_BLOCKER": 5, "SQ_DUPLICATED_LINES_DENSITY": 5}', '{"SQ_CPX": 84547.0, "CI_JOBS": 41, "SQ_COMR": 22.9, "SQ_FILES": 4685.0, "SQ_FUNCS": 34525.0, "SQ_NCLOC": 446422.0, "SQ_RULES": 35, "SQ_TESTS": 5289.0, "CI_JOBS_RED": 4, "SCM_AUTHORS": 31, "SCM_COMMITS": 4278, "SQ_COVERAGE": 64.5, "SO_ASKERS_5Y": 27, "CI_JOBS_GREEN": 21, "MLS_USR_POSTS": 1826, "SCM_MOD_LINES": 6906451, "SQ_NCLOC_LANG": null, "SQ_PUBLIC_API": 21267.0, "SQ_STATEMENTS": 220605.0, "SQ_VIOLATIONS": 11379.0, "CI_JOBS_YELLOW": 2, "SCM_AUTHORS_1M": 7, "SCM_AUTHORS_1W": 3, "SCM_AUTHORS_1Y": 15, "SCM_COMMITS_1M": 65, "SCM_COMMITS_1W": 3, "SCM_COMMITS_1Y": 533, "SCM_COMMITTERS": 21, "SQ_ISSUES_OPEN": 11379.0, "SQ_SQALE_INDEX": 203406.0, "MLS_USR_AUTHORS": 542, "MLS_USR_THREADS": 1826, "PROJECT_REL_VOL": 51, "SO_VIEWS_VOL_5Y": 5238, "SO_VOTES_VOL_5Y": 9, "SQ_CPX_FILE_IDX": 18.0, "SQ_CPX_FUNC_IDX": 2.4, "SQ_SQALE_RATING": 1.0, "MLS_USR_POSTS_1M": 104, "MLS_USR_POSTS_1W": 24, "MLS_USR_POSTS_1Y": 1038, "PROJECT_DOC_INFO": 8, "PROJECT_ITS_INFO": 5, "PROJECT_SCM_INFO": 1, "SCM_MOD_LINES_1M": 102913, "SCM_MOD_LINES_1W": 459, "SCM_MOD_LINES_1Y": 366376, "SQ_COMMENT_LINES": 132625.0, "SQ_COVERAGE_LINE": 68.1, "SQ_CPX_CLASS_IDX": 15.6, "CI_JOBS_FAILED_1W": 4, "SCM_COMMITTERS_1M": 7, "SCM_COMMITTERS_1W": 3, "SCM_COMMITTERS_1Y": 10, "SO_ANSWERS_VOL_5Y": 37, "SO_ANSWER_RATE_5Y": 1.03, "MLS_USR_AUTHORS_1M": 28, "MLS_USR_AUTHORS_1W": 10, "MLS_USR_AUTHORS_1Y": 147, "MLS_USR_THREADS_1M": 42, "MLS_USR_THREADS_1W": 14, "MLS_USR_THREADS_1Y": 368, "SQ_COVERAGE_BRANCH": 57.7, "SQ_VIOLATIONS_INFO": 161.0, "CI_JOBS_GREEN_RATIO": 77, "PROJECT_ACCESS_INFO": 3, "SO_QUESTIONS_VOL_5Y": 36, "SQ_DUPLICATED_FILES": 801.0, "SQ_DUPLICATED_LINES": 51929.0, "SQ_PUBLIC_UNDOC_API": 4175.0, "SQ_SQALE_DEBT_RATIO": 1.5, "SQ_VIOLATIONS_MAJOR": 9061.0, "SQ_VIOLATIONS_MINOR": 1788.0, "SQ_DUPLICATED_BLOCKS": 3700.0, "SQ_VIOLATIONS_BLOCKER": 0.0, "SQ_VIOLATIONS_CRITICAL": 369.0, "SQ_PUBLIC_API_DOC_DENSITY": 80.4, "SQ_TEST_SUCCESSFUL_DENSITY": 99.8, "SQ_DUPLICATED_LINES_DENSITY": 6.4}', 'modeling.sirius', '[{"rid": "PMI_EMPTY_TITLE", "src": "EclipsePmi", "desc": "The title entry is empty in the PMI.", "severity": 2}, {"rid": "PMI_EMPTY_PLAN", "src": "EclipsePmi", "desc": "The plan document URL is empty in the PMI. It helps people understand the roadmap of the project and should be filled.", "severity": 1}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius-canary has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius-website-check has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius.rcptt-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}, {"rid": "CI_FAILING_JOBS", "src": "Jenkins", "desc": "Job sirius.sonar-master has been failing for more than 1 week. You should either disable it if it''s not relevant anymore, or fix it.", "severity": 3}]', '18', '2018-10-22 12:51:04', 'administrator');
