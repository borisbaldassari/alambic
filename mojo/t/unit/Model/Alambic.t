#! perl -I../../lib/

use strict;
use warnings;

use Test::More;

BEGIN { use_ok( 'Alambic::Model::Alambic' ); }

my $alambic = Alambic::Model::Alambic->new();
isa_ok( $alambic, 'Alambic::Model::Alambic' );

# Initialise the db.
$alambic->init();

note("Create empty project from Alambic.");
my $project = $alambic->set_project( 'tools.cdt', 'Tools CDT' );
isa_ok( $project, 'Alambic::Model::Project' );
ok( $project != 0, "Project creation went well (!= 0)." ) or diag explain $project;

my $project_id = $project->get_id();
ok( $project_id =~ m!^tools.cdt$!, 'Project generated by Alambic has correct id.' ) or diag explain $project_id;

my $project_name = $project->get_name();
ok( $project_name =~ m!^Tools CDT$!, 'Project generated by Alambic has correct name.' ) or diag explain $project_name;

$project = $alambic->get_project('tools.cdt');
isa_ok( $project, 'Alambic::Model::Project' );

$project_id = $project->get_id();
ok( $project_id =~ m!^tools.cdt$!, 'Project retrieved by Alambic has correct id.' ) or diag explain $project_id;

$project_name = $project->get_name();
ok( $project_name =~ m!^Tools CDT$!, 'Project retrieved by Alambic has correct name.' ) or diag explain $project_name;

my $projects_list = $alambic->get_projects_list();
is_deeply( $projects_list, { 'tools.cdt' => 'Tools CDT' }, "Projects list contains Tools CDT only." ) or diag explain $projects_list;

note("Run project from Alambic.");
my $ret = $alambic->run_project('tools.cdt');
ok( $ret > 0, "Adding run_project returns non-null id ($ret)." ) or diag explain $ret;

done_testing();
