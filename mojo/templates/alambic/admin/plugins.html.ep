% my $plugins = app->al->get_plugins();
% my $list = $plugins->get_names_all();

            <h1 class="al-h1"><small>Administration</small> Plugins</h1>
            <br />

%= include 'alambic/admin/admin_menu', current => '/admin/plugins'

            <p>Plugins add new functionalities to Alambic. They most notably provide new data sources for projects, computing and visualisation features, and can be easily customised to fit specific needs.</p>
            <br />

	    <hr />

            <h3>Automatic data sources plugins</h3>

	    <p>These plugins are executed to retrieve data and compute repository-level metrics.</p>

            <table class="table table-striped">
              <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Type</th>
                <th>Parameters</th>
                <th>Provides info</th>
                <th>Provides data</th>
                <th>Provides metrics</th>
                <th>Provides files</th>
                <th>Provides viz</th>
                <th>Provides recs</th>
              </tr>
% my $list_pre = $plugins->get_list_plugins_pre() || [];
% foreach my $p (sort @$list_pre) {
%   my $conf = $plugins->get_plugin($p)->get_conf();
            <tr>
              <td><%= $conf->{'name'} %></td>
              <td><%= $conf->{'id'} %></td>
              <td><%= join( ', ', sort @{$conf->{'ability'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'params'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_info'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'provides_data'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_metrics'}->{$_} } keys %{$conf->{'provides_metrics'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_figs'}->{$_} } keys %{$conf->{'provides_figs'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_viz'}->{$_} } keys %{$conf->{'provides_viz'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_recs'}} ) %></td>
            </tr>
% }
            </table>

	    <hr />

            <h3>Custom data sources plugins</h3>

	    <p>These plugins are used to store custom data on projects.</p>

            <table class="table table-striped">
              <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Type</th>
                <th>Parameters</th>
                <th>Provides info</th>
                <th>Provides data</th>
                <th>Provides metrics</th>
                <th>Provides files</th>
                <th>Provides viz</th>
                <th>Provides recs</th>
              </tr>
% my $list_cdata = $plugins->get_list_plugins_cdata() || [];
% foreach my $p (sort @$list_cdata) {
%   my $conf = $plugins->get_plugin($p)->get_conf();
            <tr>
              <td><%= $conf->{'name'} %></td>
              <td><%= $conf->{'id'} %></td>
              <td><%= join( ', ', sort @{$conf->{'ability'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'params'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_info'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'provides_data'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_metrics'}->{$_} } keys %{$conf->{'provides_metrics'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_figs'}->{$_} } keys %{$conf->{'provides_figs'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_viz'}->{$_} } keys %{$conf->{'provides_viz'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_recs'}} ) %></td>
            </tr>
% }
            </table>

	    <hr />


	    <h3>Post plugins</h3>

	    <p>These plugins are executed at the end of a project's analysis, after all other pre- plugins have been run. They can access all of the project's metrics.</p>

            <table class="table table-striped">
              <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Type</th>
                <th>Parameters</th>
                <th>Provides info</th>
                <th>Provides data</th>
                <th>Provides metrics</th>
                <th>Provides files</th>
                <th>Provides viz</th>
                <th>Provides recs</th>
              </tr>
% my $list_post = $plugins->get_list_plugins_post() || [];
% foreach my $p (sort @$list_post) {
%   my $conf = $plugins->get_plugin($p)->get_conf();
            <tr>
              <td><%= $conf->{'name'} %></td>
              <td><%= $conf->{'id'} %></td>
              <td><%= join( ', ', sort @{$conf->{'ability'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'params'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_info'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'provides_data'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_metrics'}->{$_} } keys %{$conf->{'provides_metrics'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_figs'}->{$_} } keys %{$conf->{'provides_figs'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_viz'}->{$_} } keys %{$conf->{'provides_viz'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_recs'}} ) %></td>
            </tr>
% }
            </table>

	    <hr />

	    
	    <h3>Global plugins</h3>

	    <p>These plugins are executed once all projects have been executed. They can access all of the metrics created by project-specific plugins.</p>

            <table class="table table-striped">
              <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Type</th>
                <th>Parameters</th>
                <th>Provides info</th>
                <th>Provides data</th>
                <th>Provides metrics</th>
                <th>Provides files</th>
                <th>Provides viz</th>
                <th>Provides recs</th>
              </tr>
% my $list_global = $plugins->get_list_plugins_global() || [];
% foreach my $p (sort @$list_global) {
%   my $conf = $plugins->get_plugin($p)->get_conf();
            <tr>
              <td><%= $conf->{'name'} %></td>
              <td><%= $conf->{'id'} %></td>
              <td><%= join( ', ', sort @{$conf->{'ability'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'params'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_info'}} ) %></td>
              <td><%= join( ', ', sort keys %{$conf->{'provides_data'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_metrics'}->{$_} } keys %{$conf->{'provides_metrics'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_figs'}->{$_} } keys %{$conf->{'provides_figs'}} ) %></td>
              <td><%= join( ', ', sort map { $conf->{'provides_viz'}->{$_} } keys %{$conf->{'provides_viz'}} ) %></td>
              <td><%= join( ', ', sort @{$conf->{'provides_recs'}} ) %></td>
            </tr>
% }
            </table>

	    <h3>Wizards</h3>
% my $wizards = app->al->get_wizards();
% my $list = $wizards->get_names_all();

	    <p>These plugins create a new project pre-populated with various information and plugins. </p>

            <table class="table table-striped">
              <tr>
                <th width="10%">Name</th>
                <th width="10%">ID</th>
                <th width="40%">Description</th>
                <th width="20%">Parameters</th>
                <th width="20%">Plugins</th>
              </tr>
% foreach my $p (sort keys %$list) {
%   my $conf = $wizards->get_wizard($p)->get_conf();
            <tr>
              <td><%= $conf->{'name'} %></td>
              <td><%= $conf->{'id'} %></td>
              <td><%= join( ', ', @{$conf->{'desc'}} ) %></td>
              <td><%= join( ', ', ('project_id', sort keys %{$conf->{'params'}}) ) %></td>
              <td><%= join( ', ', sort @{$conf->{'plugins'}} ) %></td>
            </tr>
% }
            </table>
