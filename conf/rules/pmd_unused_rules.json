{
  "name": "PMD Unused Rules",
  "version": "5.1.2",
  "children": [
    {
	    "name": "Unused Private Field",
	    "mnemo": "UnusedPrivateField",
        "priority": "3",
	    "cat": "ANA EFF",
	    "desc": [
	      "Detects when a private field is declared and/or assigned a value, but not used.",
	      "This rule impacts analysability, since the maintainer will not understand why this field is declared. It also impacts resources, since there is an unused declared field."
	    ]
	  },
    {
	    "name": "Unused Local Variable",
	    "mnemo": "UnusedLocalVariable",
        "priority": "3",
        "cat": "ANA EFF",
	    "desc": [
		    "Detects when a local variable is declared and/or assigned, but not used.",
		    "This rule impacts analysability, since the maintainer will not understand why this variable is declared. It also impacts resources, since there is an unused declared variable."
	    ]
    },
    {
	    "name": "Unused Private Method",
	    "mnemo": "UnusedPrivateMethod",
        "priority": "3",
        "cat": "ANA EFF",
	    "desc": [
		    "Unused Private Method detects when a private method is declared but is unused.",
		    "This rule impacts analysability, since the maintainer will not understand why this method is declared. It also impacts resources, since there is an unused declared method."
	    ]
    },
    {
	    "name": "Unused Formal Parameter",
	    "mnemo": "UnusedFormalParameter",
        "priority": "3",
        "cat": "ANA",
	    "desc": [
		    "Avoid passing parameters to methods or constructors without actually referencing them in the method body.",
		    "This rule impacts analysability, since the maintainer will not understand why this parameter is declared."
	    ]
    },
    {
	    "name": "Unused Modifier",
	    "mnemo": "UnusedModifier",
        "priority": "3",
        "cat": "ANA",
	    "desc": [
		    "Fields in interfaces are automatically public static final, and methods are public abstract. Classes or interfaces nested in an interface are automatically public and static (all nested interfaces are automatically static). For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous.",
		    "TODO: The rule's priority could be lowered.",
		    "This rule impacts analysability, since it implies unnecessary code."
	    ]
    }
  ]
}
